{"ast":null,"code":"var _jsxFileName = \"/Users/hemanth/Desktop/Learn/emotion.ai/emotion-productivity-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State for emotion scores\n  const [happiness, setHappiness] = useState(5);\n  const [energy, setEnergy] = useState(5);\n  const [anger, setAnger] = useState(5);\n  const [anxiety, setAnxiety] = useState(5);\n  const [motivation, setMotivation] = useState(5);\n  const [tip, setTip] = useState(\"\");\n  const [backgroundColor, setBackgroundColor] = useState(\"linear-gradient(135deg, #667eea, #764ba2)\");\n\n  // Function to handle slider changes\n  const handleSliderChange = setter => e => {\n    setter(parseInt(e.target.value, 10));\n  };\n\n  // Function to generate productivity tip and update background color\n  const generateTip = () => {\n    let newTip = \"\";\n    let newBackgroundColor = \"\";\n    if (happiness >= 7 && energy >= 7 && motivation >= 7) {\n      newTip = \"You're on fire! Tackle your most challenging tasks today.\";\n      newBackgroundColor = \"linear-gradient(135deg, #ff9a9e, #fad0c4)\"; // Bright and vibrant\n    } else if (happiness <= 3 && anger >= 6 && anxiety >= 6 && motivation <= 3) {\n      newTip = \"Take a break and focus on self-care. Try deep breathing or meditation.\";\n      newBackgroundColor = \"linear-gradient(135deg, #0f0c29, #302b63)\"; // Dark and cool\n    } else if (energy <= 4 && motivation <= 4) {\n      newTip = \"Focus on light tasks or planning. Avoid demanding work.\";\n      newBackgroundColor = \"linear-gradient(135deg, #c3cfe2, #f5f7fa)\"; // Soft and muted\n    } else if (anger >= 7) {\n      newTip = \"Do a physical activity or listen to music to release stress.\";\n      newBackgroundColor = \"linear-gradient(135deg, #ff416c, #ff4b2b)\"; // Intense and energetic\n    } else {\n      newTip = \"Prioritize your tasks and focus on one thing at a time.\";\n      newBackgroundColor = \"linear-gradient(135deg, #667eea, #764ba2)\"; // Default\n    }\n    setTip(newTip);\n    setBackgroundColor(newBackgroundColor);\n  };\n\n  // Function to calculate slider color based on value\n  const getSliderColor = (value, emotion) => {\n    switch (emotion) {\n      case \"happiness\":\n        return `hsl(${value * 10}, 100%, 50%)`;\n      // Green to Yellow\n      case \"energy\":\n        return `hsl(${200 - value * 10}, 100%, 50%)`;\n      // Blue to Cyan\n      case \"anger\":\n        return `hsl(0, ${value * 10}%, 50%)`;\n      // Gray to Red\n      case \"anxiety\":\n        return `hsl(${270 - value * 5}, 100%, 50%)`;\n      // Light Purple to Dark Purple\n      case \"motivation\":\n        return `hsl(${30 + value * 5}, 100%, 50%)`;\n      // Light Orange to Bright Orange\n      default:\n        return \"#ccc\";\n    }\n  };\n\n  // Update background color dynamically\n  useEffect(() => {\n    document.body.style.background = backgroundColor;\n  }, [backgroundColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emotion-Based Productivity Tips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Happiness: \", happiness]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: happiness,\n          onChange: handleSliderChange(setHappiness),\n          style: {\n            background: `linear-gradient(to right, ${getSliderColor(1, \"happiness\")}, ${getSliderColor(10, \"happiness\")})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Energy: \", energy]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: energy,\n          onChange: handleSliderChange(setEnergy),\n          style: {\n            background: `linear-gradient(to right, ${getSliderColor(1, \"energy\")}, ${getSliderColor(10, \"energy\")})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Anger: \", anger]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: anger,\n          onChange: handleSliderChange(setAnger),\n          style: {\n            background: `linear-gradient(to right, ${getSliderColor(1, \"anger\")}, ${getSliderColor(10, \"anger\")})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Anxiety: \", anxiety]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: anxiety,\n          onChange: handleSliderChange(setAnxiety),\n          style: {\n            background: `linear-gradient(to right, ${getSliderColor(1, \"anxiety\")}, ${getSliderColor(10, \"anxiety\")})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Motivation: \", motivation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: motivation,\n          onChange: handleSliderChange(setMotivation),\n          style: {\n            background: `linear-gradient(to right, ${getSliderColor(1, \"motivation\")}, ${getSliderColor(10, \"motivation\")})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"generate-button\",\n      onClick: generateTip,\n      children: \"Get Productivity Tip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), tip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tip-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tip\",\n        children: tip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SOa4aTKJ3M2J0KCmiFSW1Af316k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","happiness","setHappiness","energy","setEnergy","anger","setAnger","anxiety","setAnxiety","motivation","setMotivation","tip","setTip","backgroundColor","setBackgroundColor","handleSliderChange","setter","e","parseInt","target","value","generateTip","newTip","newBackgroundColor","getSliderColor","emotion","document","body","style","background","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/hemanth/Desktop/Learn/emotion.ai/emotion-productivity-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  // State for emotion scores\n  const [happiness, setHappiness] = useState(5);\n  const [energy, setEnergy] = useState(5);\n  const [anger, setAnger] = useState(5);\n  const [anxiety, setAnxiety] = useState(5);\n  const [motivation, setMotivation] = useState(5);\n  const [tip, setTip] = useState(\"\");\n  const [backgroundColor, setBackgroundColor] = useState(\"linear-gradient(135deg, #667eea, #764ba2)\");\n\n  // Function to handle slider changes\n  const handleSliderChange = (setter) => (e) => {\n    setter(parseInt(e.target.value, 10));\n  };\n\n  // Function to generate productivity tip and update background color\n  const generateTip = () => {\n    let newTip = \"\";\n    let newBackgroundColor = \"\";\n\n    if (happiness >= 7 && energy >= 7 && motivation >= 7) {\n      newTip = \"You're on fire! Tackle your most challenging tasks today.\";\n      newBackgroundColor = \"linear-gradient(135deg, #ff9a9e, #fad0c4)\"; // Bright and vibrant\n    } else if (happiness <= 3 && anger >= 6 && anxiety >= 6 && motivation <= 3) {\n      newTip = \"Take a break and focus on self-care. Try deep breathing or meditation.\";\n      newBackgroundColor = \"linear-gradient(135deg, #0f0c29, #302b63)\"; // Dark and cool\n    } else if (energy <= 4 && motivation <= 4) {\n      newTip = \"Focus on light tasks or planning. Avoid demanding work.\";\n      newBackgroundColor = \"linear-gradient(135deg, #c3cfe2, #f5f7fa)\"; // Soft and muted\n    } else if (anger >= 7) {\n      newTip = \"Do a physical activity or listen to music to release stress.\";\n      newBackgroundColor = \"linear-gradient(135deg, #ff416c, #ff4b2b)\"; // Intense and energetic\n    } else {\n      newTip = \"Prioritize your tasks and focus on one thing at a time.\";\n      newBackgroundColor = \"linear-gradient(135deg, #667eea, #764ba2)\"; // Default\n    }\n\n    setTip(newTip);\n    setBackgroundColor(newBackgroundColor);\n  };\n\n  // Function to calculate slider color based on value\n  const getSliderColor = (value, emotion) => {\n    switch (emotion) {\n      case \"happiness\":\n        return `hsl(${value * 10}, 100%, 50%)`; // Green to Yellow\n      case \"energy\":\n        return `hsl(${200 - value * 10}, 100%, 50%)`; // Blue to Cyan\n      case \"anger\":\n        return `hsl(0, ${value * 10}%, 50%)`; // Gray to Red\n      case \"anxiety\":\n        return `hsl(${270 - value * 5}, 100%, 50%)`; // Light Purple to Dark Purple\n      case \"motivation\":\n        return `hsl(${30 + value * 5}, 100%, 50%)`; // Light Orange to Bright Orange\n      default:\n        return \"#ccc\";\n    }\n  };\n\n  // Update background color dynamically\n  useEffect(() => {\n    document.body.style.background = backgroundColor;\n  }, [backgroundColor]);\n\n  return (\n    <div className=\"App\">\n      <h1>Emotion-Based Productivity Tips</h1>\n      <div className=\"slider-container\">\n        <div className=\"slider\">\n          <label>Happiness: {happiness}</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            value={happiness}\n            onChange={handleSliderChange(setHappiness)}\n            style={{\n              background: `linear-gradient(to right, ${getSliderColor(1, \"happiness\")}, ${getSliderColor(10, \"happiness\")})`,\n            }}\n          />\n        </div>\n        <div className=\"slider\">\n          <label>Energy: {energy}</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            value={energy}\n            onChange={handleSliderChange(setEnergy)}\n            style={{\n              background: `linear-gradient(to right, ${getSliderColor(1, \"energy\")}, ${getSliderColor(10, \"energy\")})`,\n            }}\n          />\n        </div>\n        <div className=\"slider\">\n          <label>Anger: {anger}</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            value={anger}\n            onChange={handleSliderChange(setAnger)}\n            style={{\n              background: `linear-gradient(to right, ${getSliderColor(1, \"anger\")}, ${getSliderColor(10, \"anger\")})`,\n            }}\n          />\n        </div>\n        <div className=\"slider\">\n          <label>Anxiety: {anxiety}</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            value={anxiety}\n            onChange={handleSliderChange(setAnxiety)}\n            style={{\n              background: `linear-gradient(to right, ${getSliderColor(1, \"anxiety\")}, ${getSliderColor(10, \"anxiety\")})`,\n            }}\n          />\n        </div>\n        <div className=\"slider\">\n          <label>Motivation: {motivation}</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            value={motivation}\n            onChange={handleSliderChange(setMotivation)}\n            style={{\n              background: `linear-gradient(to right, ${getSliderColor(1, \"motivation\")}, ${getSliderColor(10, \"motivation\")})`,\n            }}\n          />\n        </div>\n      </div>\n      <button className=\"generate-button\" onClick={generateTip}>\n        Get Productivity Tip\n      </button>\n      {tip && (\n        <div className=\"tip-container\">\n          <div className=\"tip\">{tip}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}