{"ast":null,"code":"var _jsxFileName = \"/Users/hemanth/Desktop/Learn/emotion.ai/emotion-productivity-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { analyzeEmotionWithGemini, geminiModel } from \"./components/analyse\";\nimport { TipDisplay } from \"./components/tipDisplay\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { ChatGoogleGenerativeAI } from \"langchain/chat_models/google_generativeai\"; // LangChain integration\nimport { HumanMessage } from \"langchain/schema\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State for emotion scores\n  const [happiness, setHappiness] = useState(5);\n  const [energy, setEnergy] = useState(5);\n  const [anger, setAnger] = useState(5);\n  const [anxiety, setAnxiety] = useState(5);\n  const [motivation, setMotivation] = useState(5);\n  const [tip, setTip] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState(\"linear-gradient(135deg, #667eea, #764ba2)\");\n  const [activeTab, setActiveTab] = useState(\"tips\"); // State for active tab\n  const [emotionData, setEmotionData] = useState([]);\n  const [showTip, setShowTip] = useState(false);\n  // Dummy data for graph mode\n\n  // Function to handle slider changes\n  const handleSliderChange = setter => e => {\n    setter(parseInt(e.target.value, 10));\n  };\n\n  // Function to generate and display the tip\n  const generateTip = async () => {\n    let newBackgroundColor = \"\";\n    setShowTip(false);\n    // Determine background color based on emotional scores\n    if (happiness >= 7 && energy >= 7 && motivation >= 7) {\n      newBackgroundColor = \"linear-gradient(135deg, #ff9a9e, #fad0c4)\"; // Bright and vibrant\n    } else if (happiness <= 3 && anger >= 6 && anxiety >= 6 && motivation <= 3) {\n      newBackgroundColor = \"linear-gradient(135deg, #0f0c29, #302b63)\"; // Dark and cool\n    } else if (energy <= 4 && motivation <= 4) {\n      newBackgroundColor = \"linear-gradient(135deg, #c3cfe2, #f5f7fa)\"; // Soft and muted\n    } else if (anger >= 7) {\n      newBackgroundColor = \"linear-gradient(135deg, #ff416c, #ff4b2b)\"; // Intense and energetic\n    } else if (happiness >= 7 && anxiety <= 3) {\n      newBackgroundColor = \"linear-gradient(135deg, #76b852, #8DC26F)\"; // Calm and joyful\n    } else if (anxiety >= 7 && energy <= 3) {\n      newBackgroundColor = \"linear-gradient(135deg, #3a1c71, #d76d77, #ffaf7b)\"; // Tense and subdued\n    } else if (motivation >= 7 && happiness >= 5 && energy >= 5) {\n      newBackgroundColor = \"linear-gradient(135deg, #f7971e, #ffd200)\"; // Energizing and focused\n    } else if (happiness <= 3 && anger >= 7) {\n      newBackgroundColor = \"linear-gradient(135deg, #232526, #414345)\"; // Intense and conflicting\n    } else if (happiness >= 4 && happiness <= 6 && energy >= 4 && energy <= 6 && anger >= 4 && anger <= 6 && anxiety >= 4 && anxiety <= 6 && motivation >= 4 && motivation <= 6) {\n      newBackgroundColor = \"linear-gradient(135deg, #bdc3c7, #2c3e50)\"; // Neutral and harmonious\n    } else {\n      newBackgroundColor = \"linear-gradient(135deg, #667eea, #764ba2)\"; // Default\n    }\n    setBackgroundColor(newBackgroundColor);\n    setIsLoading(true);\n    try {\n      const prompt = await analyzeEmotionWithGemini(happiness, energy, anger, anxiety, motivation);\n      setTip(response);\n      setShowTip(true);\n      // Update historical emotion data\n      const newDataPoint = {\n        day: `Day ${emotionData.length + 1}`,\n        happiness,\n        energy,\n        anger,\n        anxiety,\n        motivation\n      };\n      const response = await geminiModel.call([new HumanMessage(prompt)]);\n      setEmotionData([...emotionData, newDataPoint]);\n    } catch (error) {\n      console.error(\"Error generating tip:\", error);\n      setTip(\"Failed to generate a tip. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to calculate slider color based on value\n  const getSliderColor = (value, emotion) => {\n    switch (emotion) {\n      case \"happiness\":\n        return `hsl(${value * 10}, 100%, 50%)`;\n      // Green to Yellow\n      case \"energy\":\n        return `hsl(${200 - value * 10}, 100%, 50%)`;\n      // Blue to Cyan\n      case \"anger\":\n        return `hsl(0, ${value * 10}%, 50%)`;\n      // Gray to Red\n      case \"anxiety\":\n        return `hsl(${270 - value * 5}, 100%, 50%)`;\n      // Light Purple to Dark Purple\n      case \"motivation\":\n        return `hsl(${30 + value * 5}, 100%, 50%)`;\n      // Light Orange to Bright Orange\n      default:\n        return \"#ccc\";\n    }\n  };\n\n  // Update background color dynamically\n  useEffect(() => {\n    document.body.style.background = backgroundColor;\n    // document.body.style.transition = \"background 0.5s ease-in-out\"; // Smooth transition\n  }, [backgroundColor]);\n\n  // Render content based on active tab\n  const renderContent = () => {\n    if (activeTab === \"tips\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Happiness: \", happiness]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              value: happiness,\n              onChange: handleSliderChange(setHappiness),\n              style: {\n                background: `linear-gradient(to right, ${getSliderColor(1, \"happiness\")}, ${getSliderColor(10, \"happiness\")})`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Energy: \", energy]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              value: energy,\n              onChange: handleSliderChange(setEnergy),\n              style: {\n                background: `linear-gradient(to right, ${getSliderColor(1, \"energy\")}, ${getSliderColor(10, \"energy\")})`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Anger: \", anger]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              value: anger,\n              onChange: handleSliderChange(setAnger),\n              style: {\n                background: `linear-gradient(to right, ${getSliderColor(1, \"anger\")}, ${getSliderColor(10, \"anger\")})`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Anxiety: \", anxiety]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              value: anxiety,\n              onChange: handleSliderChange(setAnxiety),\n              style: {\n                background: `linear-gradient(to right, ${getSliderColor(1, \"anxiety\")}, ${getSliderColor(10, \"anxiety\")})`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Motivation: \", motivation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              value: motivation,\n              onChange: handleSliderChange(setMotivation),\n              style: {\n                background: `linear-gradient(to right, ${getSliderColor(1, \"motivation\")}, ${getSliderColor(10, \"motivation\")})`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generate-button\",\n          onClick: generateTip,\n          disabled: isLoading,\n          children: isLoading ? \"Generating...\" : \"Get Productivity Tip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), showTip && tip && /*#__PURE__*/_jsxDEV(TipDisplay, {\n          tip: tip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true);\n    } else if (activeTab === \"graph\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 600,\n          height: 300,\n          data: emotionData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"day\",\n            color: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"happiness\",\n            stroke: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"energy\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"anger\",\n            stroke: \"#ff7300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"anxiety\",\n            stroke: \"#ff0000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"motivation\",\n            stroke: \"#00ffff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emotion-Based Tips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Make your day 1% better\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === \"tips\" ? \"active\" : \"\"}`,\n        onClick: () => setActiveTab(\"tips\"),\n        children: \"Tips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === \"graph\" ? \"active\" : \"\"}`,\n        onClick: () => setActiveTab(\"graph\"),\n        children: \"Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"82pASSR3Ucoa+PjxkWPDdXe8Fng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","analyzeEmotionWithGemini","geminiModel","TipDisplay","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ChatGoogleGenerativeAI","HumanMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","happiness","setHappiness","energy","setEnergy","anger","setAnger","anxiety","setAnxiety","motivation","setMotivation","tip","setTip","isLoading","setIsLoading","backgroundColor","setBackgroundColor","activeTab","setActiveTab","emotionData","setEmotionData","showTip","setShowTip","handleSliderChange","setter","e","parseInt","target","value","generateTip","newBackgroundColor","prompt","response","newDataPoint","day","length","call","error","console","getSliderColor","emotion","document","body","style","background","renderContent","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","onClick","disabled","width","height","data","strokeDasharray","dataKey","color","stroke","_c","$RefreshReg$"],"sources":["/Users/hemanth/Desktop/Learn/emotion.ai/emotion-productivity-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { analyzeEmotionWithGemini, geminiModel } from \"./components/analyse\";\nimport { TipDisplay } from \"./components/tipDisplay\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { ChatGoogleGenerativeAI } from \"langchain/chat_models/google_generativeai\"; // LangChain integration\nimport { HumanMessage } from \"langchain/schema\";\nconst App = () => {\n  // State for emotion scores\n  const [happiness, setHappiness] = useState(5);\n  const [energy, setEnergy] = useState(5);\n  const [anger, setAnger] = useState(5);\n  const [anxiety, setAnxiety] = useState(5);\n  const [motivation, setMotivation] = useState(5);\n  const [tip, setTip] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [backgroundColor, setBackgroundColor] = useState(\"linear-gradient(135deg, #667eea, #764ba2)\");\n  const [activeTab, setActiveTab] = useState(\"tips\"); // State for active tab\n  const [emotionData, setEmotionData] = useState([]);\n  const [showTip, setShowTip] = useState(false);\n  // Dummy data for graph mode\n\n  // Function to handle slider changes\n  const handleSliderChange = (setter) => (e) => {\n    setter(parseInt(e.target.value, 10));\n  };\n\n  // Function to generate and display the tip\n  const generateTip = async () => {\n    let newBackgroundColor = \"\";\n    setShowTip(false);\n    // Determine background color based on emotional scores\n    if (happiness >= 7 && energy >= 7 && motivation >= 7) {\n      newBackgroundColor = \"linear-gradient(135deg, #ff9a9e, #fad0c4)\"; // Bright and vibrant\n    } else if (happiness <= 3 && anger >= 6 && anxiety >= 6 && motivation <= 3) {\n      newBackgroundColor = \"linear-gradient(135deg, #0f0c29, #302b63)\"; // Dark and cool\n    } else if (energy <= 4 && motivation <= 4) {\n      newBackgroundColor = \"linear-gradient(135deg, #c3cfe2, #f5f7fa)\"; // Soft and muted\n    } else if (anger >= 7) {\n      newBackgroundColor = \"linear-gradient(135deg, #ff416c, #ff4b2b)\"; // Intense and energetic\n    } else if (happiness >= 7 && anxiety <= 3) {\n      newBackgroundColor = \"linear-gradient(135deg, #76b852, #8DC26F)\"; // Calm and joyful\n    } else if (anxiety >= 7 && energy <= 3) {\n      newBackgroundColor = \"linear-gradient(135deg, #3a1c71, #d76d77, #ffaf7b)\"; // Tense and subdued\n    } else if (motivation >= 7 && happiness >= 5 && energy >= 5) {\n      newBackgroundColor = \"linear-gradient(135deg, #f7971e, #ffd200)\"; // Energizing and focused\n    } else if (happiness <= 3 && anger >= 7) {\n      newBackgroundColor = \"linear-gradient(135deg, #232526, #414345)\"; // Intense and conflicting\n    } else if (happiness >= 4 && happiness <= 6 && energy >= 4 && energy <= 6 && anger >= 4 && anger <= 6 && anxiety >= 4 && anxiety <= 6 && motivation >= 4 && motivation <= 6) {\n      newBackgroundColor = \"linear-gradient(135deg, #bdc3c7, #2c3e50)\"; // Neutral and harmonious\n    } else {\n      newBackgroundColor = \"linear-gradient(135deg, #667eea, #764ba2)\"; // Default\n    }\n\n    setBackgroundColor(newBackgroundColor);\n\n    setIsLoading(true);\n    try {\n      const prompt = await analyzeEmotionWithGemini(happiness, energy, anger, anxiety, motivation);\n      setTip(response);\n      setShowTip(true);\n      // Update historical emotion data\n      const newDataPoint = {\n        day: `Day ${emotionData.length + 1}`,\n        happiness,\n        energy,\n        anger,\n        anxiety,\n        motivation,\n      };\n      const response = await geminiModel.call([new HumanMessage(prompt)]);\n      setEmotionData([...emotionData, newDataPoint]);\n    } catch (error) {\n      console.error(\"Error generating tip:\", error);\n      setTip(\"Failed to generate a tip. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to calculate slider color based on value\n  const getSliderColor = (value, emotion) => {\n    switch (emotion) {\n      case \"happiness\":\n        return `hsl(${value * 10}, 100%, 50%)`; // Green to Yellow\n      case \"energy\":\n        return `hsl(${200 - value * 10}, 100%, 50%)`; // Blue to Cyan\n      case \"anger\":\n        return `hsl(0, ${value * 10}%, 50%)`; // Gray to Red\n      case \"anxiety\":\n        return `hsl(${270 - value * 5}, 100%, 50%)`; // Light Purple to Dark Purple\n      case \"motivation\":\n        return `hsl(${30 + value * 5}, 100%, 50%)`; // Light Orange to Bright Orange\n      default:\n        return \"#ccc\";\n    }\n  };\n\n  // Update background color dynamically\n  useEffect(() => {\n    document.body.style.background = backgroundColor;\n    // document.body.style.transition = \"background 0.5s ease-in-out\"; // Smooth transition\n  }, [backgroundColor]);\n\n  // Render content based on active tab\n  const renderContent = () => {\n    if (activeTab === \"tips\") {\n      return (\n        <>\n          <div className=\"slider-container\">\n            <div className=\"slider\">\n              <label>Happiness: {happiness}</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={happiness}\n                onChange={handleSliderChange(setHappiness)}\n                style={{\n                  background: `linear-gradient(to right, ${getSliderColor(1, \"happiness\")}, ${getSliderColor(10, \"happiness\")})`,\n                }}\n              />\n            </div>\n            <div className=\"slider\">\n              <label>Energy: {energy}</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={energy}\n                onChange={handleSliderChange(setEnergy)}\n                style={{\n                  background: `linear-gradient(to right, ${getSliderColor(1, \"energy\")}, ${getSliderColor(10, \"energy\")})`,\n                }}\n              />\n            </div>\n            <div className=\"slider\">\n              <label>Anger: {anger}</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={anger}\n                onChange={handleSliderChange(setAnger)}\n                style={{\n                  background: `linear-gradient(to right, ${getSliderColor(1, \"anger\")}, ${getSliderColor(10, \"anger\")})`,\n                }}\n              />\n            </div>\n            <div className=\"slider\">\n              <label>Anxiety: {anxiety}</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={anxiety}\n                onChange={handleSliderChange(setAnxiety)}\n                style={{\n                  background: `linear-gradient(to right, ${getSliderColor(1, \"anxiety\")}, ${getSliderColor(10, \"anxiety\")})`,\n                }}\n              />\n            </div>\n            <div className=\"slider\">\n              <label>Motivation: {motivation}</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={motivation}\n                onChange={handleSliderChange(setMotivation)}\n                style={{\n                  background: `linear-gradient(to right, ${getSliderColor(1, \"motivation\")}, ${getSliderColor(10, \"motivation\")})`,\n                }}\n              />\n            </div>\n          </div>\n          <button className=\"generate-button\" onClick={generateTip} disabled={isLoading}>\n            {isLoading ? \"Generating...\" : \"Get Productivity Tip\"}\n          </button>\n          {showTip && tip && <TipDisplay tip={tip} />}\n        </>\n      );\n    } else if (activeTab === \"graph\") {\n      return (\n        <div className=\"graph-container\">\n          <LineChart width={600} height={300} data={emotionData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"day\" color=\"red\" />\n            <YAxis color=\"white\" />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"happiness\" stroke=\"#82ca9d\" />\n            <Line type=\"monotone\" dataKey=\"energy\" stroke=\"#8884d8\" />\n            <Line type=\"monotone\" dataKey=\"anger\" stroke=\"#ff7300\" />\n            <Line type=\"monotone\" dataKey=\"anxiety\" stroke=\"#ff0000\" />\n            <Line type=\"monotone\" dataKey=\"motivation\" stroke=\"#00ffff\" />\n          </LineChart>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Emotion-Based Tips</h1>\n      <h2>Make your day 1% better</h2>\n      <div className=\"tab-navigation\">\n        <button className={`tab-button ${activeTab === \"tips\" ? \"active\" : \"\"}`} onClick={() => setActiveTab(\"tips\")}>\n          Tips\n        </button>\n        <button className={`tab-button ${activeTab === \"graph\" ? \"active\" : \"\"}`} onClick={() => setActiveTab(\"graph\")}>\n          Graph\n        </button>\n      </div>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}