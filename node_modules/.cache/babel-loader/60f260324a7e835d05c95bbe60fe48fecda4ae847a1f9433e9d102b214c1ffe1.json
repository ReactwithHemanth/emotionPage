{"ast":null,"code":"var _jsxFileName = \"/Users/hemanth/Desktop/Learn/emotion.ai/emotion-productivity-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State for emotion scores\n  const [happiness, setHappiness] = useState(5);\n  const [energy, setEnergy] = useState(5);\n  const [anger, setAnger] = useState(5);\n  const [anxiety, setAnxiety] = useState(5);\n  const [motivation, setMotivation] = useState(5);\n  const [tip, setTip] = useState(\"\");\n  const [backgroundColor, setBackgroundColor] = useState(\"linear-gradient(135deg, #667eea, #764ba2)\");\n\n  // Function to handle slider changes\n  const handleSliderChange = setter => e => {\n    setter(parseInt(e.target.value, 10));\n  };\n\n  // Function to generate productivity tip and update background color\n  const generateTip = () => {\n    let newTip = \"\";\n    let newBackgroundColor = \"\";\n    if (happiness >= 7 && energy >= 7 && motivation >= 7) {\n      newTip = \"You're on fire! Tackle your most challenging tasks today.\";\n      newBackgroundColor = \"linear-gradient(135deg, #ff9a9e, #fad0c4)\"; // Bright and vibrant\n    } else if (happiness <= 3 && anger >= 6 && anxiety >= 6 && motivation <= 3) {\n      newTip = \"Take a break and focus on self-care. Try deep breathing or meditation.\";\n      newBackgroundColor = \"linear-gradient(135deg, #0f0c29, #302b63)\"; // Dark and cool\n    } else if (energy <= 4 && motivation <= 4) {\n      newTip = \"Focus on light tasks or planning. Avoid demanding work.\";\n      newBackgroundColor = \"linear-gradient(135deg, #c3cfe2, #f5f7fa)\"; // Soft and muted\n    } else if (anger >= 7) {\n      newTip = \"Do a physical activity or listen to music to release stress.\";\n      newBackgroundColor = \"linear-gradient(135deg, #ff416c, #ff4b2b)\"; // Intense and energetic\n    } else {\n      newTip = \"Prioritize your tasks and focus on one thing at a time.\";\n      newBackgroundColor = \"linear-gradient(135deg, #667eea, #764ba2)\"; // Default\n    }\n    setTip(newTip);\n    setBackgroundColor(newBackgroundColor);\n  };\n\n  // Update background color dynamically\n  useEffect(() => {\n    document.body.style.background = backgroundColor;\n  }, [backgroundColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emotion-Based Productivity Tips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Happiness: \", happiness]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: happiness,\n          onChange: handleSliderChange(setHappiness)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Energy: \", energy]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: energy,\n          onChange: handleSliderChange(setEnergy)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Anger: \", anger]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: anger,\n          onChange: handleSliderChange(setAnger)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Anxiety: \", anxiety]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: anxiety,\n          onChange: handleSliderChange(setAnxiety)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Motivation: \", motivation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: motivation,\n          onChange: handleSliderChange(setMotivation)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"generate-button\",\n      onClick: generateTip,\n      children: \"Get Productivity Tip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), tip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tip-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tip\",\n        children: tip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SOa4aTKJ3M2J0KCmiFSW1Af316k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","happiness","setHappiness","energy","setEnergy","anger","setAnger","anxiety","setAnxiety","motivation","setMotivation","tip","setTip","backgroundColor","setBackgroundColor","handleSliderChange","setter","e","parseInt","target","value","generateTip","newTip","newBackgroundColor","document","body","style","background","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/hemanth/Desktop/Learn/emotion.ai/emotion-productivity-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  // State for emotion scores\n  const [happiness, setHappiness] = useState(5);\n  const [energy, setEnergy] = useState(5);\n  const [anger, setAnger] = useState(5);\n  const [anxiety, setAnxiety] = useState(5);\n  const [motivation, setMotivation] = useState(5);\n  const [tip, setTip] = useState(\"\");\n  const [backgroundColor, setBackgroundColor] = useState(\"linear-gradient(135deg, #667eea, #764ba2)\");\n\n  // Function to handle slider changes\n  const handleSliderChange = (setter) => (e) => {\n    setter(parseInt(e.target.value, 10));\n  };\n\n  // Function to generate productivity tip and update background color\n  const generateTip = () => {\n    let newTip = \"\";\n    let newBackgroundColor = \"\";\n\n    if (happiness >= 7 && energy >= 7 && motivation >= 7) {\n      newTip = \"You're on fire! Tackle your most challenging tasks today.\";\n      newBackgroundColor = \"linear-gradient(135deg, #ff9a9e, #fad0c4)\"; // Bright and vibrant\n    } else if (happiness <= 3 && anger >= 6 && anxiety >= 6 && motivation <= 3) {\n      newTip = \"Take a break and focus on self-care. Try deep breathing or meditation.\";\n      newBackgroundColor = \"linear-gradient(135deg, #0f0c29, #302b63)\"; // Dark and cool\n    } else if (energy <= 4 && motivation <= 4) {\n      newTip = \"Focus on light tasks or planning. Avoid demanding work.\";\n      newBackgroundColor = \"linear-gradient(135deg, #c3cfe2, #f5f7fa)\"; // Soft and muted\n    } else if (anger >= 7) {\n      newTip = \"Do a physical activity or listen to music to release stress.\";\n      newBackgroundColor = \"linear-gradient(135deg, #ff416c, #ff4b2b)\"; // Intense and energetic\n    } else {\n      newTip = \"Prioritize your tasks and focus on one thing at a time.\";\n      newBackgroundColor = \"linear-gradient(135deg, #667eea, #764ba2)\"; // Default\n    }\n\n    setTip(newTip);\n    setBackgroundColor(newBackgroundColor);\n  };\n\n  // Update background color dynamically\n  useEffect(() => {\n    document.body.style.background = backgroundColor;\n  }, [backgroundColor]);\n\n  return (\n    <div className=\"App\">\n      <h1>Emotion-Based Productivity Tips</h1>\n      <div className=\"slider-container\">\n        <div className=\"slider\">\n          <label>Happiness: {happiness}</label>\n          <input type=\"range\" min=\"1\" max=\"10\" value={happiness} onChange={handleSliderChange(setHappiness)} />\n        </div>\n        <div className=\"slider\">\n          <label>Energy: {energy}</label>\n          <input type=\"range\" min=\"1\" max=\"10\" value={energy} onChange={handleSliderChange(setEnergy)} />\n        </div>\n        <div className=\"slider\">\n          <label>Anger: {anger}</label>\n          <input type=\"range\" min=\"1\" max=\"10\" value={anger} onChange={handleSliderChange(setAnger)} />\n        </div>\n        <div className=\"slider\">\n          <label>Anxiety: {anxiety}</label>\n          <input type=\"range\" min=\"1\" max=\"10\" value={anxiety} onChange={handleSliderChange(setAnxiety)} />\n        </div>\n        <div className=\"slider\">\n          <label>Motivation: {motivation}</label>\n          <input type=\"range\" min=\"1\" max=\"10\" value={motivation} onChange={handleSliderChange(setMotivation)} />\n        </div>\n      </div>\n      <button className=\"generate-button\" onClick={generateTip}>\n        Get Productivity Tip\n      </button>\n      {tip && (\n        <div className=\"tip-container\">\n          <div className=\"tip\">{tip}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACgB,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,2CAA2C,CAAC;;EAEnG;EACA,MAAMoB,kBAAkB,GAAIC,MAAM,IAAMC,CAAC,IAAK;IAC5CD,MAAM,CAACE,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;EACtC,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,kBAAkB,GAAG,EAAE;IAE3B,IAAItB,SAAS,IAAI,CAAC,IAAIE,MAAM,IAAI,CAAC,IAAIM,UAAU,IAAI,CAAC,EAAE;MACpDa,MAAM,GAAG,2DAA2D;MACpEC,kBAAkB,GAAG,2CAA2C,CAAC,CAAC;IACpE,CAAC,MAAM,IAAItB,SAAS,IAAI,CAAC,IAAII,KAAK,IAAI,CAAC,IAAIE,OAAO,IAAI,CAAC,IAAIE,UAAU,IAAI,CAAC,EAAE;MAC1Ea,MAAM,GAAG,wEAAwE;MACjFC,kBAAkB,GAAG,2CAA2C,CAAC,CAAC;IACpE,CAAC,MAAM,IAAIpB,MAAM,IAAI,CAAC,IAAIM,UAAU,IAAI,CAAC,EAAE;MACzCa,MAAM,GAAG,yDAAyD;MAClEC,kBAAkB,GAAG,2CAA2C,CAAC,CAAC;IACpE,CAAC,MAAM,IAAIlB,KAAK,IAAI,CAAC,EAAE;MACrBiB,MAAM,GAAG,8DAA8D;MACvEC,kBAAkB,GAAG,2CAA2C,CAAC,CAAC;IACpE,CAAC,MAAM;MACLD,MAAM,GAAG,yDAAyD;MAClEC,kBAAkB,GAAG,2CAA2C,CAAC,CAAC;IACpE;IAEAX,MAAM,CAACU,MAAM,CAAC;IACdR,kBAAkB,CAACS,kBAAkB,CAAC;EACxC,CAAC;;EAED;EACA3B,SAAS,CAAC,MAAM;IACd4B,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAGd,eAAe;EAClD,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,oBACEf,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB/B,OAAA;MAAA+B,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCnC,OAAA;MAAK8B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B/B,OAAA;QAAK8B,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB/B,OAAA;UAAA+B,QAAA,GAAO,aAAW,EAAC5B,SAAS;QAAA;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrCnC,OAAA;UAAOoC,IAAI,EAAC,OAAO;UAACC,GAAG,EAAC,GAAG;UAACC,GAAG,EAAC,IAAI;UAAChB,KAAK,EAAEnB,SAAU;UAACoC,QAAQ,EAAEtB,kBAAkB,CAACb,YAAY;QAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClG,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB/B,OAAA;UAAA+B,QAAA,GAAO,UAAQ,EAAC1B,MAAM;QAAA;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/BnC,OAAA;UAAOoC,IAAI,EAAC,OAAO;UAACC,GAAG,EAAC,GAAG;UAACC,GAAG,EAAC,IAAI;UAAChB,KAAK,EAAEjB,MAAO;UAACkC,QAAQ,EAAEtB,kBAAkB,CAACX,SAAS;QAAE;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5F,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB/B,OAAA;UAAA+B,QAAA,GAAO,SAAO,EAACxB,KAAK;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7BnC,OAAA;UAAOoC,IAAI,EAAC,OAAO;UAACC,GAAG,EAAC,GAAG;UAACC,GAAG,EAAC,IAAI;UAAChB,KAAK,EAAEf,KAAM;UAACgC,QAAQ,EAAEtB,kBAAkB,CAACT,QAAQ;QAAE;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1F,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB/B,OAAA;UAAA+B,QAAA,GAAO,WAAS,EAACtB,OAAO;QAAA;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjCnC,OAAA;UAAOoC,IAAI,EAAC,OAAO;UAACC,GAAG,EAAC,GAAG;UAACC,GAAG,EAAC,IAAI;UAAChB,KAAK,EAAEb,OAAQ;UAAC8B,QAAQ,EAAEtB,kBAAkB,CAACP,UAAU;QAAE;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB/B,OAAA;UAAA+B,QAAA,GAAO,cAAY,EAACpB,UAAU;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCnC,OAAA;UAAOoC,IAAI,EAAC,OAAO;UAACC,GAAG,EAAC,GAAG;UAACC,GAAG,EAAC,IAAI;UAAChB,KAAK,EAAEX,UAAW;UAAC4B,QAAQ,EAAEtB,kBAAkB,CAACL,aAAa;QAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNnC,OAAA;MAAQ8B,SAAS,EAAC,iBAAiB;MAACU,OAAO,EAAEjB,WAAY;MAAAQ,QAAA,EAAC;IAE1D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRtB,GAAG,iBACFb,OAAA;MAAK8B,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5B/B,OAAA;QAAK8B,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAElB;MAAG;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CAjFID,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAmFT,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}