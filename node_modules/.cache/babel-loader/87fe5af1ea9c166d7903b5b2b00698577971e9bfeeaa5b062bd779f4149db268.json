{"ast":null,"code":"var _jsxFileName = \"/Users/hemanth/Desktop/Learn/emotion.ai/emotion-productivity-app/src/components/emotion.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classifyEmotion = () => {\n  _s();\n  const [tip, setTip] = useState(\"\");\n  if (happiness >= 8 && energy >= 8 && motivation >= 8) {\n    tip = \"Excellent! Focus on challenging tasks, creative work, or starting new projects.\";\n  } else if (happiness <= 4 && anger >= 6 && anxiety >= 6 && motivation <= 4) {\n    tip = \"Potentially a difficult day. Practice self-care, relaxation techniques, and break down tasks into small steps.\";\n  } else if (energy <= 4 && motivation <= 4 && happiness >= 5) {\n    tip = \"Good for light tasks, planning, reading, or taking breaks.\";\n  } else if (energy >= 8 && happiness <= 4 && frustration >= 6) {\n    tip = \"Try physical activity to burn off energy and frustration, or listen to music.\";\n  } else {\n    tip = \"Take a moment to reflect on your emotions and choose a task that aligns with your current state.\";\n  }\n  setTip(newTip); // For now, we'll just alert the tip. You can replace this with a proper display later.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emotion-Based Productivity Tips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: classifyEmotion,\n      children: \"Get Productivity Tip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), tip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tip\",\n      children: tip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(classifyEmotion, \"bzKXUA0QWiPbpNDiPQuQvTZ+9Qk=\");\nexport default classifyEmotion;","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","classifyEmotion","_s","tip","setTip","happiness","energy","motivation","anger","anxiety","frustration","newTip","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/hemanth/Desktop/Learn/emotion.ai/emotion-productivity-app/src/components/emotion.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst classifyEmotion = () => {\n  const [tip, setTip] = useState(\"\");\n\n  if (happiness >= 8 && energy >= 8 && motivation >= 8) {\n    tip = \"Excellent! Focus on challenging tasks, creative work, or starting new projects.\";\n  } else if (happiness <= 4 && anger >= 6 && anxiety >= 6 && motivation <= 4) {\n    tip = \"Potentially a difficult day. Practice self-care, relaxation techniques, and break down tasks into small steps.\";\n  } else if (energy <= 4 && motivation <= 4 && happiness >= 5) {\n    tip = \"Good for light tasks, planning, reading, or taking breaks.\";\n  } else if (energy >= 8 && happiness <= 4 && frustration >= 6) {\n    tip = \"Try physical activity to burn off energy and frustration, or listen to music.\";\n  } else {\n    tip = \"Take a moment to reflect on your emotions and choose a task that aligns with your current state.\";\n  }\n\n  setTip(newTip); // For now, we'll just alert the tip. You can replace this with a proper display later.\n  return (\n    <div className=\"App\">\n      <h1>Emotion-Based Productivity Tips</h1>\n      {/* Sliders go here */}\n      <button onClick={classifyEmotion}>Get Productivity Tip</button>\n      {tip && <div className=\"tip\">{tip}</div>}\n    </div>\n  );\n};\nexport default classifyEmotion;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElC,IAAIO,SAAS,IAAI,CAAC,IAAIC,MAAM,IAAI,CAAC,IAAIC,UAAU,IAAI,CAAC,EAAE;IACpDJ,GAAG,GAAG,iFAAiF;EACzF,CAAC,MAAM,IAAIE,SAAS,IAAI,CAAC,IAAIG,KAAK,IAAI,CAAC,IAAIC,OAAO,IAAI,CAAC,IAAIF,UAAU,IAAI,CAAC,EAAE;IAC1EJ,GAAG,GAAG,gHAAgH;EACxH,CAAC,MAAM,IAAIG,MAAM,IAAI,CAAC,IAAIC,UAAU,IAAI,CAAC,IAAIF,SAAS,IAAI,CAAC,EAAE;IAC3DF,GAAG,GAAG,4DAA4D;EACpE,CAAC,MAAM,IAAIG,MAAM,IAAI,CAAC,IAAID,SAAS,IAAI,CAAC,IAAIK,WAAW,IAAI,CAAC,EAAE;IAC5DP,GAAG,GAAG,+EAA+E;EACvF,CAAC,MAAM;IACLA,GAAG,GAAG,kGAAkG;EAC1G;EAEAC,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC;EAChB,oBACEX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExCjB,OAAA;MAAQkB,OAAO,EAAEjB,eAAgB;MAAAY,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9Dd,GAAG,iBAAIH,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAC,QAAA,EAAEV;IAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAACf,EAAA,CAxBID,eAAe;AAyBrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}